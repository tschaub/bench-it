#!/usr/bin/env node

var fs = require('fs');
var path = require('path');

var glob = require('glob');
var optimist = require('optimist');

var runner = require('../lib/runner');

var usage = 'Usage:\n    $0 [options] <files>\n\n' +
    'Examples:\n' +
    'Run a single benchmark\n    $0 one-benchmark.js\n\n' +
    'Run all *.js in the benchmarks directory\n    $0 benchmarks';


var argv = optimist.usage(usage)
    .options('g', {
      alias: 'glob',
      describe: 'Glob pattern to match files in a directory ' +
          '(should be quoted)',
      default: '**/*.js'
    })
    .demand(1)
    .argv;

var items = argv._;
var files = [];

function gather(i) {
  var item = items[i];
  if (!item) {
    return runner(files);
  }
  fs.stat(item, function(err, stats) {
    if (err) {
      console.error(err.message);
      process.exit(1);
    }
    if (stats.isDirectory()) {
      glob(argv.glob, {cwd: item}, function(err, matches) {
        files = files.concat(matches.map(function(match) {
          return path.join(item, match);
        }));
        gather(++i);
      });
    } else {
      files.push(item);
      gather(++i);
    }
  });
}
gather(0);
