#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

const glob = require('glob');
const optimist = require('optimist');

const runner = require('../lib/runner');

const name = path.basename(__filename);

const usage = 'Usage:\n    ' + name + ' [options] <files>\n\n' +
  'Examples:\n' +
  'Run a single benchmark\n    ' + name + ' one-benchmark.js\n\n' +
  'Run all *.js in the benchmarks directory\n    ' + name + ' benchmarks';


const argv = optimist.usage(usage)
  .options('g', {
    alias: 'glob',
    describe: 'Glob pattern to match files in a directory ' +
      '(should be quoted)',
    default: '**/*.js'
  })
  .demand(1)
  .argv;

const items = argv._;
let files = [];

function gather(i) {
  let item = items[i];
  if (!item) {
    return runner(files);
  }
  fs.stat(item, function(err, stats) {
    if (err) {
      console.error(err.message);
      process.exit(1);
    }
    if (stats.isDirectory()) {
      glob(argv.glob, {cwd: item}, function(err, matches) {
        files = files.concat(matches.map(function(match) {
          return path.join(item, match);
        }));
        gather(++i);
      });
    } else {
      files.push(item);
      gather(++i);
    }
  });
}
gather(0);
